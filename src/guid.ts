import { v4 } from "uuid";
import { StringWrapper } from "./primitiveWrappers";
import { FQN } from "./fqn";

/**
 * ## Guid
 *
 * Represents a guid string. Values are generated by uuid package.
 */
@FQN("@tokilabs/lang.Guid")
export class Guid extends StringWrapper {
	private value: string;

	protected get primitiveValue(): string {
		return this.value;
	}

	/**
	 * Creates an instance of Guid.
	 *
	 * If a guid is passed as a parameter it will be validated,
	 * otherwise a new guid value will be generated.
	 *
	 * @param {string} [guid]
	 * @memberof Guid
	 */
	constructor(guid?: string) {
		if (guid) {
			if (!Guid.isValidGuid(guid))
				throw new Error("Invalid guid value supplied");
		} else {
			guid = v4();
		}

		super(guid.toLocaleLowerCase());
		this.value = guid.toLocaleLowerCase();
	}

	public static isValidGuid(guid: string): boolean {
		return /^[0-9a-f]{8}-?[0-9a-f]{4}-?[1-5][0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$/i.test(
			guid
		);
	}
}
